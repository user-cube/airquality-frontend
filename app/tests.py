# Generated by Selenium IDE
import time
from selenium import webdriver
from selenium.webdriver.common.by import By

class AirQualityTest():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_airQuality(self):
        # Test name: AirQuality
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://tqsfrontend.herokuapp.com/")
        # 2 | setWindowSize | 1489x880 |
        self.driver.set_window_size(1489, 880)
        # 3 | click | linkText=See air quality |
        self.vars["window_handles"] = self.driver.window_handles
        # 4 | selectWindow | handle=${win5581} |
        self.driver.find_element(By.LINK_TEXT, "See air quality").click()
        # 5 | click | css=h1 |
        self.vars["win5581"] = self.wait_for_window(2000)
        # 6 | click | css=tr:nth-child(6) > td:nth-child(2) |
        self.driver.switch_to.window(self.vars["win5581"])
        # 7 | click | css=tbody |
        self.driver.find_element(By.CSS_SELECTOR, "h1").click()
        # 8 | click | css=.container:nth-child(3) |
        self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(6) > td:nth-child(2)").click()
        # 9 | click | css=h2 |
        self.driver.find_element(By.CSS_SELECTOR, "tbody").click()
        self.driver.find_element(By.CSS_SELECTOR, ".container:nth-child(3)").click()
        self.driver.find_element(By.CSS_SELECTOR, "h2").click()


class ForecastTest():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_forecastTest(self):
        # Test name: ForecastTest
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://tqsfrontend.herokuapp.com/")
        # 2 | setWindowSize | 1489x880 |
        self.driver.set_window_size(1489, 880)
        # 3 | click | linkText=Check forecast |
        self.vars["window_handles"] = self.driver.window_handles
        # 4 | selectWindow | handle=${win828} |
        self.driver.find_element(By.LINK_TEXT, "Check forecast").click()
        # 5 | click | css=.body-content |
        self.vars["win828"] = self.wait_for_window(2000)
        # 6 | click | css=body |
        self.driver.switch_to.window(self.vars["win828"])
        # 7 | click | css=tbody |
        self.driver.find_element(By.CSS_SELECTOR, ".body-content").click()
        # 8 | click | css=tr:nth-child(1) > td:nth-child(1) |
        self.driver.find_element(By.CSS_SELECTOR, "body").click()
        # 9 | click | css=h2 |
        self.driver.find_element(By.CSS_SELECTOR, "tbody").click()
        self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) > td:nth-child(1)").click()
        self.driver.find_element(By.CSS_SELECTOR, "h2").click()


class CoordinatesTest():
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_coordinates(self):
        # Test name: Coordinates
        # Step # | name | target | value
        # 1 | open | / |
        self.driver.get("https://tqsfrontend.herokuapp.com/")
        # 2 | setWindowSize | 1489x880 |
        self.driver.set_window_size(1489, 880)
        # 3 | click | linkText=See coordinates |
        self.vars["window_handles"] = self.driver.window_handles
        # 4 | selectWindow | handle=${win220} |
        self.driver.find_element(By.LINK_TEXT, "See coordinates").click()
        # 5 | click | css=.body-content |
        self.vars["win220"] = self.wait_for_window(2000)
        # 6 | click | css=tbody > tr |
        self.driver.switch_to.window(self.vars["win220"])
        # 7 | click | css=body |
        self.driver.find_element(By.CSS_SELECTOR, ".body-content").click()
        # 8 | click | css=.notfound |
        self.driver.find_element(By.CSS_SELECTOR, "tbody > tr").click()
        self.driver.find_element(By.CSS_SELECTOR, "body").click()
        self.driver.find_element(By.CSS_SELECTOR, ".notfound").click()